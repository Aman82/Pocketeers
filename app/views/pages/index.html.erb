<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAPS_KEY'] %>"> 
</script>

<script>
var map;
function initialize() {
  var mapOptions = {
    zoom: 12
  };
  map = new google.maps.Map(document.getElementById('map-canvas'),
      mapOptions);
  $.get('/api/groups').then(function(data) {
    for(var i=0; i < data.length; i++){
      var url = 'https://maps.googleapis.com/maps/api/geocode/json?address=' + encodeURIComponent(data[i].location)
      console.log(url)
      $.get(url).then((function(i) {
        return function(data2) {
          var infowindow = new google.maps.InfoWindow({
            content: '<div class="infowindow">' + data[i].topic + '</div>' + '<div class="infowindow">' + data[i].name + '</div>'
          });
          var marker = new google.maps.Marker({
          position: data2.results[0].geometry.location,
          map: map,
          title: data[i].topic
          });
          google.maps.event.addListener(marker, 'mouseover', function() {
            infowindow.open(map,marker);
          });
          google.maps.event.addListener(marker, 'mouseout', function() {
            infowindow.close(map,marker);
          });
          google.maps.event.addListener(marker, 'click', function() {
            window.location.href = "/groups/" + data[i].id;
          });
        };
      })(i));
    }
  })

  if(navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
    var pos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
    var marker = new google.maps.Marker({
      map: map,
      position: pos,
      title: 'You are here!',
      icon: 'assets/smiley.png'
    });
    map.setCenter(pos);
    }, function() {
      handleNoGeolocation(true);
    });
  } else {  
    handleNoGeolocation(false);
  }

  $('#search').click(function(e){
    e.preventDefault();
    $("#map-canvas").show("slow", function(){
      google.maps.event.trigger(map,"resize")
      if ($('#address').val() == ""){
        if(navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
          var pos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
          map.setCenter(pos);
          }, function() {
            handleNoGeolocation(true);
          });
        } else {  
          handleNoGeolocation(false);
        }
      } else {
        var address = document.getElementById('address').value;
        var url = 'https://maps.googleapis.com/maps/api/geocode/json?address=' + encodeURIComponent(address)
        console.log(url)
        $.get(url).then(function(data) {
          map.setCenter(data.results[0].geometry.location)
          console.log(data.results[0].geometry.viewport.southwest)
          var southwest = new google.maps.LatLng(data.results[0].geometry.viewport.southwest.lat,data.results[0].geometry.viewport.southwest.lng);
          var northeast = new google.maps.LatLng(data.results[0].geometry.viewport.northeast.lat,data.results[0].geometry.viewport.northeast.lng);
          console.log(southwest)
          var bounds = new google.maps.LatLngBounds(southwest,northeast);
          map.fitBounds(bounds);
        });
      }
    });
$('html, body').animate({
        scrollTop: $("#search_form").offset().top - 45
    }, 1000);
// $(window).scrollTop(805)
  });
}

function handleNoGeolocation(errorFlag) {
  if (errorFlag) {
    var content = 'Error: The Geolocation service failed.';
  } else {
    var content = 'Error: Your browser doesn\'t support geolocation.';
  }
  var options = {
    map: map,
    position: new google.maps.LatLng(60, 105),
    content: content
  };
  var infowindow = new google.maps.InfoWindow(options);
  map.setCenter(options.position);
  }
google.maps.event.addDomListener(window, 'load', initialize);
</script>

<div class="banner">
  <h1 id="logo">Welcome to Explorio</h1>
</div>

<script>

var width = 960,
    height = 500;

var nodes = d3.range(10).map(function() { return {radius: Math.random() * 12 + 4}; }),
    root = nodes[0],
    color = d3.scale.category10();

root.radius = 0;
root.fixed = true;

var force = d3.layout.force()
    .gravity(0.05)
    .charge(function(d, i) { return i ? 0 : -2000; })
    .nodes(nodes)
    .size([width, height]);

force.start();

var svg = d3.select(".banner").append("svg")

svg.selectAll("circle")
    .data(nodes.slice(1))
    .enter().append("circle")
    .attr("r", function(d) { return d.radius; })
    .style("fill", function(d, i) { return color(i % 3); });

force.on("tick", function(e) {
  var q = d3.geom.quadtree(nodes),
      i = 0,
      n = nodes.length;

  while (++i < n) q.visit(collide(nodes[i]));

  svg.selectAll("circle")
      .attr("cx", function(d) { return d.x; })
      .attr("cy", function(d) { return d.y; });
});

svg.on("mousemove", function() {
  var p1 = d3.mouse(this);
  root.px = p1[0];
  root.py = p1[1];
  force.resume();
});

function collide(node) {
  var r = node.radius + 16,
      nx1 = node.x - r,
      nx2 = node.x + r,
      ny1 = node.y - r,
      ny2 = node.y + r;
  return function(quad, x1, y1, x2, y2) {
    if (quad.point && (quad.point !== node)) {
      var x = node.x - quad.point.x,
          y = node.y - quad.point.y,
          l = Math.sqrt(x * x + y * y),
          r = node.radius + quad.point.radius;
      if (l < r) {
        l = (l - r) / l * .5;
        node.x -= x *= l;
        node.y -= y *= l;
        quad.point.x += x;
        quad.point.y += y;
      }
    }
    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;
  };
}

</script>

<!-- Search Button -->

<div id="search_form" class="row">
  <div class="large-12 columns">
    <div class="row collapse">
    <form>
    <div class="large-8 small-9 columns">
      <input id="address" type="text" placeholder="Find Groups">
    </div>
    <div class="large-4 small-3 columns">
      <button id="search" class=" postfix alert button">Search Location</button>
  </div>
  </form>
</div>
</div>
</div>

<!-- Map Canvas Area -->
<div  id="map-canvas">
</div>

<!-- Button Search Area -->

<div class="row">
  <div class="large-12 columns">
    <div class="moreInfo panel">
      <h3 id="about">Mentor guided track with a group of highly motivated like minded individuals</h3>
      <div id="moreInfo_buttons">
        <%= link_to "See All Groups", groups_path, class:   "large-5 button" %>

        <%= link_to "See Curriculums", curriculums_path, class:   "large-5 button" %>
      </div>
    </div>
  </div>
</div>
   
<div class="row">
<% @groups.each do |group| %>
  <div class="large-4 columns">
    <div class="pagesGroup panel">
      <h4><%= group.curriculum.title %> </h4>
      <div class="row">
        <div class="large-12 columns">
          <p><%= truncate(group.curriculum.summary, length: 55, separator: '') %> </p>
          <%= link_to "Explore", group, class: "tiny button" %>
        </div>
      </div>
    </div>
  </div>
  <% end %>
</div>

<footer class="row">
  <div class="large-12 columns">
    <hr/>
    <div class="row">
      <div class="large-6 columns">
        <p>Â© Copyright. Explorio.</p>
      </div>
      <div class="large-6 columns">
        <ul class="inline-list right">
          <li><a href="https://www.facebook.com/">Follow on Facebook</a></li>
          <li><a href="https://twitter.com/login">Twitter</a></li>
          <li><a href="https://www.linkedin.com/">Linkedin</a></li>
          <li><a href="https://plus.google.com/">Google+</a></li>
        </ul>
      </div>
    </div>
  </div> 
</footer>
    
